<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>IEquatable&lt;&gt; implementation for a value type</Title>
      <Description>Adds implementation stub for IEquatable&lt;&gt; interface.</Description>
      <Shortcut>equatablestruct</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Author>@ViIvanov</Author>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>System</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal Editable="false">
          <ID>TypeName</ID>
          <Function>ClassName()</Function>
          <ToolTip>Name of the type</ToolTip>
        </Literal>
        <Literal Editable="false">
          <ID>NotImplementedException</ID>
          <Function>SimpleTypeName(global::System.NotImplementedException)</Function>
          <ToolTip>Type of the exception</ToolTip>
        </Literal>
        <Literal Editable="false">
          <ID>HashCode</ID>
          <Function>SimpleTypeName(global::System.HashCode)</Function>
          <ToolTip>HashCode type reference</ToolTip>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="method decl">
        <![CDATA[public bool Equals($TypeName$ other) {
  $end$throw new $NotImplementedException$();
}

public override int GetHashCode() => $HashCode$.Combine(0);
public override bool Equals(object? obj) => obj is $TypeName$ other && Equals(other);

public static bool operator ==($TypeName$ left, $TypeName$ right) => left.Equals(right);
public static bool operator !=($TypeName$ left, $TypeName$ right) => !(left == right);]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
